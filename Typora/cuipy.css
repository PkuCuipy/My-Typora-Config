/*
    这个假期没少折腾 Typora 的 CSS 样式
    搞来搞去发现审美是个循环, 主要就是爱折腾.
    不吐槽自己了.
    这个主题的模板仍然是 github.css , 
    并且参考注释更为清晰的 vintage.css
    这里说一下这次以自己命名的主题要做什么, 
    包括一些笔记.
    
    1. 列表的缩进, 在 Github 主题下, 
        无序/有序列表相比于正常的文字会靠右, 我改掉了这个.
    2. 原来的自动折行和软换行的间距为0, 这真的太难看了.
    3. 看到一个博客的格式很好, 我就基本上抄过来了. 
        在那个博客中, 代码块和左侧的标号是用一个 table 实现的,
        相比于 Typora 这个及其复杂的结构真是不知道高到哪里去了x
        总之为了实现类似的效果, 没少折腾, 最后的结果也蛮丑陋的.
    4. 标题太大太丑, 减小了大小, 同时增加了css计数器实现自动标号.
    5. 文本紧接着的 blockquote 很大程度上是对这个文本进行"注释", 
        针对这种情形缩小间距. 否则有很强的的分离感.
    6. 改用 Google 的 Noto 字体, 而非苹果的 PingFang 字体. 纯折腾.
    7. 现在(2021/2/25)的一切都很令人满意了, 少折腾点吧, 还有7天选课截止, 还有10天就开学了.
    8. 小代码块 0.9em 的字体也确实应该如此, 因为这个字体看起来偏大, 外加外框会让这个元素变得更大
        尽管如此, 小代码块有点偏下. 因此使用 vertical-align:3% 来修正. 
        顺便发现浏览器微调这个数据时, 可以使用上下方向键来以 1% 为间隔进行微调.
        因此顺便发现自己之前一个<误区>, 即以为只有某几个特殊的百分比才会有调整. 
        而事实上是都有, 只不过有的时候特别细微, 甚至导致在一些元素上渲染没变, 但在另外一些元素上就能看出差异.
        然而如果按住 option 来进行 0.1% 间隔微调, 则发现确实是在某些格子时发生跳变. anyway.

*/


:root {
    /* 这是 Typora 其他文件用到的变量 */
    --control-text-color: #777;
    --side-bar-bg-color: #fafafa;
    /* 这些是这个文件自己用到的变量 */
    --text-color: #555555;                  /* 正常文本的颜色 */
    --bigcode-bg-color: #f7f7f7;            /* 大代码块的背景颜色 */
    --smallcode-bg-color: #eeeeee;          /* 小代码块的背景颜色 */
    --smallcode-text-color: var(--text-color);       /* 小代码块的文本颜色 */
    --blockquote-bg-color: #dfe2e541;       /* 半透明好调节, 而且可以让多层嵌套时颜色逐层加深 */         
    --hr-color: #e2e4e8;                    /* 水平分割线(Horizontal Rule)的颜色 */     
    --blockquote-text-color: #666666;       /* 被引用文本的颜色 */
    --code-font: "Menlo";                     /* 代码字体 */
    --google-font: "Noto Sans CJK SC";
    --apple-font: "Helvetica Neue", "PingFang SC";
    --ui-bg-color: #fafafa;
    --highlight-color: #ffe3c3;
    --big-border-radius: 5px;
    --small-border-radius: 1px;
    --border-color: #e7eaed;
    --underline-color: #cccccc;
}


/******************************* 这里定义一些全局信息 ******************************/

html {
    font-size: 16px;
}
html, body, #write {
    background: white;
    font-family: var(--google-font), var(--apple-font);
    font-weight: normal;
    color: var(--text-color);   
    line-height: 1.6;
    margin: auto;
  	padding: 30px;
    padding-bottom: 100px;
}

/* 当屏幕足够大时, 扩展 max-width 以更好地适应屏幕 */
#write {
    max-width: 860px;
}
@media only screen and (min-width: 1400px) {    
	#write {
		max-width: 1024px;
	}
}
@media only screen and (min-width: 1800px) {
	#write {
		max-width: 1200px;
	}
}

/******************************* 这里定义水平线的样式 ******************************/

hr {
    /* margin: 3em auto; */
    width: 100%;
    max-width: 100%;
    border: none;
    border-top: 1px solid var(--hr-color);
}

/******************************* 这里定义链接的样式 *******************************/

a {
    color: var(--text-color);
    text-decoration: none;
    border-bottom: 1px solid var(--underline-color);
    padding-bottom: 0.5px;
}
/* 鼠标移动到上面时颜色加深 */
a:hover {
    color: #222222;
    border-bottom: 1px solid #222222;
}

/******************************* 这里定义[ToC]的样式 *******************************/

.md-toc-content {
    counter-reset: h1toc;
}
.md-toc-h1 {
    font-size: 1.1rem;
    margin-left: 0;
    counter-reset: h2toc;
}
.md-toc-h2 {
    font-size: 1rem;
    margin-left: 2rem;
    counter-reset: h3toc;
}
.md-toc-h3 {
    font-size: 0.9rem;
    margin-left: 3rem;
    counter-reset: h4toc;
}
.md-toc-h1:before {
    color: #285e8e;
    white-space: pre-wrap;
    counter-increment: h1toc;
    content: "§" counter(h1toc) "  "
}
.md-toc-h2:before {
    color: #285e8e;
    white-space: pre-wrap;
    counter-increment: h2toc;
    content: counter(h1toc) "."counter(h2toc) "  "
}
.md-toc-h3:before {
    color: #285e8e;
    white-space: pre-wrap;
    counter-increment: h3toc;
    content: counter(h1toc) "."counter(h2toc) "."counter(h3toc) "  "
}

.md-toc-h1 .md-toc-inner,
.md-toc-h2 .md-toc-inner,
.md-toc-h3 .md-toc-inner {
    margin-left: 0;
    border-style: none;
    font-weight: normal;
}
.md-toc-h1 .md-toc-inner:hover,
.md-toc-h2 .md-toc-inner:hover,
.md-toc-h3 .md-toc-inner:hover,
.md-toc-h4 .md-toc-inner:hover,
.md-toc-h5 .md-toc-inner:hover,
.md-toc-h6 .md-toc-inner:hover {
    text-decoration: none;
} 



/******************************* 这里定义[任务列表]的样式 ****************************/

.md-task-list-item > input {
    margin-left: -1.3em;
}

/******************************* 这里定义[代码]的样式 ******************************/

h1 tt, h1 code,
h2 tt, h2 code,
h3 tt, h3 code,
h4 tt, h4 code,
h5 tt, h5 code,
h6 tt, h6 code {
    font-size: inherit;
}

.md-fences {
    background-color: #f0f2f3;
    font-family: var(--code-font);     
    margin-bottom: 15px;
    margin-top: 15px;
    border-radius: var(--small-border-radius);
}
code {                            
    background-color: var(--smallcode-bg-color);    
    color: var(--smallcode-text-color);
    padding: 2px 4px 2px 4px;
    margin: 0 2px 0 2px;
    font-family: var(--code-font);
    border-radius: var(--big-border-radius);
    font-size: 0.9em;
    vertical-align: 3%;
}
.CodeMirror-sizer {
    padding-top: 8px;
    padding-bottom: 8px !important;
    background-color: var(--bigcode-bg-color);  
    border-top-right-radius: var(--small-border-radius);
    border-bottom-right-radius: var(--small-border-radius);
}
.CodeMirror-linenumber.CodeMirror-gutter-elt {
    padding-right: 1px !important;
    color: #889194 !important;
}
/* 默认是继承背景色, 会导致边角处越过圆弧线 */
.CodeMirror-scroll .CodeMirror.cm-s-inner{
    background-color: transparent;
}
.CodeMirror-line {
    padding-left: 10px !important;
}
/* 取消默认的竖线, 并撑大行号栏 */
.CodeMirror-gutters {
    border-right-style: none;   
    padding-right: 4px;
    padding-left: 4px;
}
/* 语言选择提示框 */
.code-tooltip {
    box-shadow: 0 1px 1px 0 rgba(0,28,36,.3);
    border-top: 1px solid #eef2f2;
}


/******************************* 这里定义大纲的样式 ******************************/

/* 侧边栏大纲的计数器标号 */
.sidebar-content {counter-reset: sb_cnt_h1;}
.outline-h1 {counter-reset: sb_cnt_h2;}
.outline-h2 {counter-reset: sb_cnt_h3;}
.outline-h1>.outline-item>.outline-label:before {
    counter-increment: sb_cnt_h1;
    content: "§" counter(sb_cnt_h1, upper-alpha) ". ";
}
.outline-h2>.outline-item>.outline-label:before {
    counter-increment: sb_cnt_h2;
    content: counter(sb_cnt_h2) ". ";
}
.outline-h3>.outline-item>.outline-label:before {
    counter-increment: sb_cnt_h3;
    content: counter(sb_cnt_h2) "."counter(sb_cnt_h3) ". ";
}


/******************************* 这里定义标题的样式 ******************************/

h1,h2,h3,h4,h5,h6 {
    position: relative;
    margin-top: 1rem;
    margin-bottom: 1rem;    
    font-weight: 500;
    cursor: text;
}
h1 {
    text-align: center;
    font-size: 1.6rem;
    padding-bottom: 0.3rem;  
}
h2 {
    font-size: 1.3rem;
    color: rgb(53, 94, 138);
}
h3 {
    font-size: 1.1rem;
}
h4, h5, h6 {
    font-size: 1rem;
    color: red;
    text-decoration: line-through;
}

/* 标题计数器 */
body {counter-reset: cnt_h1;}
h1 {counter-reset: cnt_h2;} 
h2 {counter-reset: cnt_h3;} 
h1:before {
    counter-increment: cnt_h1;
    content: "§" counter(cnt_h1) "  ";
    font-weight: normal;
}
h2:before {
    counter-increment: cnt_h2;
    content: counter(cnt_h2) ". ";
    font-weight: normal;
    color: rgb(53, 94, 138);
}
h3:before {
    counter-increment: cnt_h3;
    content: counter(cnt_h2) "." counter(cnt_h3) ". ";
    font-weight: normal;
    /* color: rgb(152, 51, 48); */
}

/******************************* 这里定义列表的样式 ******************************/

p, blockquote, ul, ol, dl, table{
    margin: 0.8em 0;
}
li>ol, li>ul {
    margin: 0 0;
}
li p.first {
    display: inline-block;
}
ul {
    padding-left: 20px;         
}
ol {
    padding-left: 23px;
    list-style-type: upper-roman;
}
ol ol {
    list-style-type: lower-roman;
}
ul:first-child, ol:first-child {
    margin-top: 0;
}
ul:last-child, ol:last-child {
    margin-bottom: 0;
}
/* 列表中的段落不设置边界了, 因为间距太大太丑. */
li p {
    margin: 0 0;
}

/******************************* 这里定义段落的样式 ******************************/

/* 折行和软换行的行间距增大 */
p {
    line-height: 2;
}

/******************************* 这里定义图片的样式 ******************************/

/* 图片外加圆角边框 */
img {
    border-radius: var(--small-border-radius);
    border: 2px solid  rgba(0,0,0,0.1);
    padding: 0 0 0 0;
}

/******************************* 这里定义引用块的样式 ******************************/

blockquote {
    border-left: 7px solid #ddd;
    padding: 5px 10px 3px 14px;  
    background-color: var(--blockquote-bg-color);
    color: var(--blockquote-text-color);  
    border-top-right-radius: var(--big-border-radius);  
    border-bottom-right-radius: var(--big-border-radius);  
    margin-left: 1px;
}
/* 多嵌套时, 右侧不再继续缩小 */
blockquote blockquote {   
    padding-right: 0;                               
}
/* blockquote 紧邻文本时, 相应边界减小 */
p + blockquote {                                    
    margin-top: 0.25rem;
}


/******************************* 这里定义表格的样式 ******************************/

table {
    padding: 0;
    word-break: initial;
}
table tr {
    margin: 0;
    padding: 0;
}
table tr:nth-child(2n), thead {
    background-color: var(--bigcode-bg-color);
}
table tr th {
    font-weight: bold;
    border-bottom: 0;
    margin: 0;
    padding: 6px 13px;
}
table tr td {
    margin: 0;
    padding: 6px 13px;
}
table tr th:first-child,
table tr td:first-child {
    margin-top: 0;
}
table tr th:last-child,
table tr td:last-child {
    margin-bottom: 0;
}

/* 取消表格占用整个宽度, 但具有最小宽度(通过对 th td 设置) */
table {width: 0;}
th, td {
    width: 5em;
    white-space: nowrap;    
}

/* 
    设置表格 table 为圆角
    并不是想象中那么简单! 这是因为 border-collapse: collapse 与 border-radius 冲突
    解决方法:
    - 由于我们为了设置 border-radius 所以必须设置 border-collapse: separate
    - 这样的话, 单元格交界处就会出现两个线, 变粗变难看.
    - 所以我们需要仔细使用 CSS 选择器, 为不同位置的单元格设置不同的边框绘制"职责", 
    - 让他们"共同完成"这个表格的所有边框, 且每个交界处只有一条线.
*/
table {
    border-collapse: separate;
}
table thead tr th {
    border-top: 1px solid var(--border-color);
}
table tr th, table tr td {
    border-right: 1px solid var(--border-color);
    border-bottom: 1px solid var(--border-color);
}
table tr th:first-child, table tr td:first-child {
    border-left: 1px solid var(--border-color);
}
/* 分别设置 [左上, 右上, 右下, 左下] 的圆角 */
table tr:first-child th:first-child {border-top-left-radius: var(--big-border-radius);}   
table tr:first-child th:last-child {border-top-right-radius: var(--big-border-radius);}
table tr:last-child td:last-child {border-bottom-right-radius: var(--big-border-radius);}
table tr:last-child td:first-child {border-bottom-left-radius: var(--big-border-radius);}



/*************************** 这里修改一些杂项的样式 **************************/

/* 修改高亮的颜色, 以及柔和的边框, 类似小代码块<code> */
mark {
    background-color: var(--highlight-color);
    border-radius: var(--big-border-radius); 
}
/* 修改下划线的实现方式(默认下划线->下边框) 提供更多定制空间 */
u {
    text-decoration: none;
    border-bottom: 1px solid var(--underline-color);
    padding-bottom: 0.5px;
}
/* <斜体>修改右侧对齐量, 防止最右侧的斜体字"插进"正体字里 */
em{
    margin-right: 2px;
}

/*************************** 这里定义打印或者导出PDF的样式 **************************/

@media print {
    html {
        padding: 0 !important;
        margin: 0 !important;
    }
    .typora-export #write {
        padding: 0 !important;
        margin: 0 !important;
    }
    table, pre {
        page-break-inside: avoid;   
    }
    pre {
        word-wrap: break-word;
    }
}


/*************************** 下面的是从 github.css 直接复制过来的, 不太清楚具体做了什么 **************************/


#write pre.md-meta-block {
	padding: 1rem;
    font-size: 85%;
    line-height: 1.45;
    background-color: #f7f7f7;
    border: 0;
    border-radius: var(--big-border-radius); 
    color: #777777;
    color: red;
    margin-top: 0 !important;
}

.mathjax-block>.code-tooltip {
	bottom: .375rem;
}
.md-mathjax-midline {
    background-color: var(--ui-bg-color); 
}

#write>h3.md-focus:before{
	left: -1.5625rem;
	top: .375rem;
}
#write>h4.md-focus:before{
	left: -1.5625rem;
	top: .285714286rem;
}
#write>h5.md-focus:before{
	left: -1.5625rem;
	top: .285714286rem;
}
#write>h6.md-focus:before{
	left: -1.5625rem;
	top: .285714286rem;
}
.md-image>.md-meta {
    border: 1px solid #ddd;                           
    border-radius: var(--big-border-radius);      
    padding: 2px 0px 0px 4px;
    font-size: 0.9em;
    color: inherit;
}

.md-tag {
    color: #a7a7a7;
    opacity: 1;
}

.md-toc { 
    margin-top:20px;
    padding-bottom:20px;
}

.sidebar-tabs {
    border-bottom: none;
}

#typora-quick-open {
    border: 1px solid #ddd;
    background-color: #f8f8f8;
}

#typora-quick-open-item {
    background-color: var(--ui-bg-color); 
    border-color: #FEFEFE #e5e5e5 #e5e5e5 #eee;
    border-style: solid;
    border-width: 1px;
}


.on-focus-mode blockquote {
    border-left-color: rgba(85, 85, 85, 0.12);
}

header, .context-menu, .megamenu-content, footer{
    font-family: "Segoe UI", "Arial", sans-serif;
}

.file-node-content:hover .file-node-icon,
.file-node-content:hover .file-node-open-state{
    visibility: visible;
}

.mac-seamless-mode #typora-sidebar {
    background-color: var(--ui-bg-color);
}

.md-lang {
    color: #b4654d;
}

.html-for-mac .context-menu {
    --item-hover-bg-color: #E6F0FE;
}

#md-notification .btn {
    border: 0;
}

.dropdown-menu .divider {
    border-color: #e5e5e5;
}

.ty-preferences .window-content {
    background-color: var(--ui-bg-color);  
}

.ty-preferences .nav-group-item.active {
    color: white;
    background: #999;
}
